FROM archlinux:base-devel

# Disable device mapping during build (as per your original Containerfile)
ENV BUILDTIME=true

# Install dependencies
# Note: rocm-opencl-runtime might not be strictly necessary for HIPBLAS, but keeping it as it was in your original.
RUN pacman -Syu --noconfirm git cmake python python-pip rocm-hip-sdk rocblas hipblas openmp hip-runtime-amd

# Build llama.cpp
RUN git clone https://github.com/ggerganov/llama.cpp && \
    cd llama.cpp && \
    mkdir build && \
    # Explicitly set ROCM_PATH for CMake to find the ROCm installation
    export ROCM_PATH=/opt/rocm && \
    # Set ROCm's clang as the compiler, crucial for HIP integration
    export CC=/opt/rocm/llvm/bin/clang && \
    export CXX=/opt/rocm/llvm/bin/clang++ && \
    cmake .. \
        -B build \
        -S . \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX='/usr' \
        -DBUILD_SHARED_LIBS=ON \
        -DLLAMA_CURL=ON \
        -DLLAMA_BUILD_TESTS=OFF \
        -DLLAMA_USE_SYSTEM_GGML=OFF \
        -DGGML_ALL_WARNINGS=OFF \
        -DGGML_ALL_WARNINGS_3RD_PARTY=OFF \
        -DGGML_BUILD_EXAMPLES=OFF \
        -DGGML_BUILD_TESTS=OFF \
        -DGGML_LTO=ON \
        -DGGML_RPC=ON \
        -DGGML_HIP=ON \
        -DGGML_CUDA_FA_ALL_QUANTS=ON \
        -DAMDGPU_TARGETS=gfx1100 \
        -Wno-dev && \
    cmake --build build -j$(nproc)

# Set environment variables for runtime
ENV GGML_HIPBLAS=1
ENV HSA_OVERRIDE_GFX_VERSION=11.0.0
ENV ROCR_VISIBLE_DEVICES=0

WORKDIR /app
CMD ["/llama.cpp/build/bin/server", "-m", "/models/llama2-7b-chat.gguf", "--host", "0.0.0.0", "--port", "8080", "--n-gpu-layers", "32"]

